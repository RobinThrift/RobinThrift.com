<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>open62541 on Robin Thrift</title>
    <link>https://robinthrift.com/tags/open62541/</link>
    <description>Recent content in open62541 on Robin Thrift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/RobinThrift&#34;&gt;Robin Thrift&lt;/a&gt; 2023</copyright>
    <lastBuildDate>Sun, 07 Jun 2020 00:00:00 +0100</lastBuildDate><atom:link href="https://robinthrift.com/tags/open62541/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zig C Interop Adventures</title>
      <link>https://robinthrift.com/post/zig-c-interop-init-failure/</link>
      <pubDate>Sun, 07 Jun 2020 00:00:00 +0100</pubDate>
      
      <guid>https://robinthrift.com/post/zig-c-interop-init-failure/</guid>
      <description>So this post initially started out as a sort of experience report on how I got Zig working with a C library (open62541) I am quite familiar with, especially in terms of C interop, as I was using it with CGo. However, this little experiment did not go quite as planned&amp;hellip;
Quick Background and Motivation OPC Unified Architecture (UA) is an industry standard for the communication between devices, primarily designed for manufacturing/factory floor settings.</description>
    </item>
    
  </channel>
</rss>
