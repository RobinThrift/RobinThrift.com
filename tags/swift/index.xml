<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swift on Robin Thrift</title>
    <link>https://robinthrift.com/tags/swift/</link>
    <description>Recent content in Swift on Robin Thrift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/RobinThrift&#34;&gt;Robin Thrift&lt;/a&gt; 2017</copyright>
    <lastBuildDate>Mon, 03 Jul 2017 00:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://robinthrift.com/tags/swift/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Error Handling in Swift?</title>
      <link>https://robinthrift.com/post/swift-error-handling/</link>
      <pubDate>Mon, 03 Jul 2017 00:00:00 +0100</pubDate>
      
      <guid>https://robinthrift.com/post/swift-error-handling/</guid>
      <description>I&amp;rsquo;ve been writing a lot of Swift recently, both for iOS and macOS (maybe some server side Linux stuff in future too). Whenever you learn a new language you initially take some idioms from other languages with you. I am primarily a JavaScript developer, where, due to the nature of things, most operations are asynchronous, so they are wrapped in promises. Error handling in this case is mostly handled in anonymous functions where the first parameter is the error object:</description>
    </item>
    
  </channel>
</rss>